version: '3.8'

services:
  static_web_server:
    #container_name: static-web-server
    build: ./static-web-server
    expose:
      - "80"
      - "443"
    volumes:
      - ./static-web-server/logs:/var/log/nginx
      #- ./reverse-proxy/traefik.yml:/etc/traefik/traefik.yml:ro
    labels:
      - "traefik.enable=true" # Explicitly tell traefik to expose this container
      - "traefik.http.routers.static-router.rule=Host(`static.localhost`)" #the domain the service will respond to
      - "traefik.http.routers.static-router.entrypoints=web,websecure" # allow request only on web and websecure address defined on traeefik service
      - "traefik.http.services.static-router.loadbalancer.server.port=80"

      # To deploy statically a number of instances of this container
      #deploy:
      # replicas: 5


  api_server:
    #container_name: api_server
    build: ./api-server
    expose:
      - "80"
    labels:
      - "traefik.enable=true" # Explicitly tell traefik to expose this container
      - "traefik.http.routers.api-router.rule=PathPrefix(`/api/`)" # the service will respond to path prefixed by /api
      - "traefik.http.routers.api-router.service=api-router" # routes all requests to the service api-router
      - "traefik.http.services.myservice.loadbalancer.server.port=80"
      - "traefik.http.services.api-router.loadBalancer.sticky=true" # Enable sticky session
      - "traefik.http.services.api-router.loadBalancer.sticky.cookie.name=MyBelovedTest" # Name the cookie to be sent
      - "traefik.http.services.api-router.loadBalancer.sticky.cookie.secure=true" # Cookie is encrypted

      # To deploy statically a number of instances of this container
      #deploy:
      # replicas: 5


  traefik:
    image: traefik
    command:
      - "--api.insecure=true"  # Enable Traefik dashboard
      - "--providers.docker=true" # Enable docker providers
      - "--providers.docker.exposedbydefault=false" # Do not expose containers except when explicitly told so
      - "--entrypoints.web.address=:80" # define address "web" on port 80
      - "--entrypoints.websecure.address=:443" # define address "websecure" on port 443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # copy the docker socket do that traefik can find containers
      - ./reverse_proxy/logs:/var/log/traefik # mount traefik logs volumes
      #- /reverse-proxy/traefik.yaml:/etc/traefik/traefik.yaml
    ports:
      - "80:80" # Web-server
      - "8080:8080" # Dashboard


  api_website:
    image: nginx:alpine
    expose:
      - 80
      - 443
    volumes:
      - ./api-website/nginx.conf:/etc/nginx/nginx.conf
      - ./api-website/content:/www/data
      - ./api-website/logs:/var/log/nginx
    labels:
      - "traefik.enable=true" # Explicitly tell traefik to expose this container
      - "traefik.http.routers.dynamic-router.rule=Host(`localhost`)" #the domain the service will respond to
      - "traefik.http.routers.dynamic-router.entrypoints=web,websecure" # allow request only on web and websecure address defined on traeefik service
      - "traefik.http.services.dynamic-router.loadbalancer.server.port=80"


  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
    restart: unless-stopped
